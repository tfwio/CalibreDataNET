<p>@{
 Layout = &#8220;~/Views/Shared/_Layout.cshtml&#8221;;
 ViewBag.Title = &#8220;index&#8221;;
}</p>

<h1>Conf</h1>

<p>SEE:</p>

<ul>
<li><a href="http://backbonejs.org/#Sync">BackboneJS-Sync</a></li>
<li><a href="@Url.Content("~/assets/doc/readme.htm")" target="_doc">readme</a></li>
<li><a href="@Url.Content("~/conf/?get=1")">JSON</a></li>
</ul>

<p>@Html.Partial(&#8220;CurrentSettings&#8221;)</p>

<h2>Manage</h2>

<h3>Configuration Options</h3>

<p>@Html.Partial(&#8220;ImageUtils&#8221;)</p>

<h2>Test PUT</h2>

<div id="out"></div>

<p><button id='test'>test put</button></p>

<p><select id="subtle"></select></p>

<p><br />
@*
@Html.ViewData[&#8220;json&#8221;]
*@
<script>

'use strict';

function doPut()
{
    var oData = {
        libroot:"f:/horde/library",
        imgroot:"d:/dev/www/pub/reader/assets",
        dirs: [
            "library, the","library, comic","library, dev",
            "library, ebook","library, fiction","library, mag",
            "library, new","library, ssoc","library, topical"
        ]
    };
    $.ajax({
      url: '@Url.Content("~/conf/")',
      type: 'PUT',
      contentType: 'application/json; charset=utf-8',
      dataType: 'json',
      data: JSON.stringify(oData),
      success: function (result) {
        //alert(result);
      },
      error: function(e) {
        if (e.statusText != "OK")
        {
            console.log("this", this);
            console.log("e",    e);
        } else {
            console.log(e);
        }
      }
    });
}
var TestBg = Backbone.Collection.extend({
    url: "@Url.Content("~/conf/images")",
    parse: function(o)
    {
        return {files: o};
    }
});
var TestBgView = Backbone.View.extend({
    el: 'select#subtle',
    collection: new TestBg(),
    tpl: _.template("<option value=\"<%= file %>\"><%= file %></option>"),
    render: function(o)
    {
        console.log("rendering",this.$el)
        _.each(o,function(){  });
    },
    onfetch: function(c)
    {
        var ob = this.collection.first().get("files");
        this.render(_.each(ob,function(e){}));
        return this;
    },
    initialize: function()
    {
        this.collection.on("reset", this.onfetch, this);
        this.collection.fetch({
            reset: true
        });
        return this;
    }
});
var ConfigModel = Backbone.Model.extend({
    defaults: function(){ return { 'httpMethod': null }; },
    url: '@Url.Content("~/conf/data/")'
});
var ConfigView = Backbone.View.extend({
    el: '#config-elms',
    model: new ConfigModel,
    $htm: $("#out"),
    createButton: function(id,text,method){
        var b = document.createElement("BUTTON");
        b = $(b);
        b.attr('id',id);
        b.html(text);
        b.on('click',this,method)
        this.$el.append(b);
    },
    render:function(){
        this.createButton.call(this,"btn-do-fetch","FETCH",this.dofetch);
        this.createButton.call(this,"btn-do-fetch","SAVE",this.dosave);
    },
    dofetch: function(el){
        el.data.model.fetch({
            error: el.data.goterror,
            success: el.data.gotsuccess,
            complete: el.data.gotdata
            });
    },
    dosave: function(el){
        el.data.model.set("httpMethod","THE VALUE THAT I SET, "+String(app.incr));
        console.log("saving... The updated value is ",el.data.model.get("httpMethod"));
        var rv = el.data.model.save({
            error: el.data.goterror,
            success: el.data.gotsuccess,
            complete: el.data.gotdata
            });
    },
    gotdata: function(e){
        console.log("got data",e,this);
        console.log(JSON.stringify(e.responseText));
    },
    goterror: function(e){
        console.log("error",e,"this",this);
    },
    gotsuccess: function(e){
        console.log("success");
    },
    onchange: function(el){
        console.log("changed",this,el);
        app.incr++;
        console.log(app.incr);
        app.view.$htm.html(app.incr);
    },
    initialize: function(){
        this.model.on('change',this.onchange);
        this.render();
        return this;
    }
});
$(window).ready(function(){
    $('#test').on('click',doPut);
    window.app = {
        incr: 0,
        view: new ConfigView,
        imgs: new TestBgView
    };
});


</script></p>
<style>
/* shCoreMidnight.css */
@import 'data:text/stylesheet;base64,';
/* shCoreThemeMidnight.css */
@import 'data:text/stylesheet;base64,LyoqCiAqIFN5bnRheEhpZ2hsaWdodGVyCiAqIGh0dHA6Ly9hbGV4Z29yYmF0Y2hldi5jb20vU3ludGF4SGlnaGxpZ2h0ZXIKICoKICogU3ludGF4SGlnaGxpZ2h0ZXIgaXMgZG9uYXRpb253YXJlLiBJZiB5b3UgYXJlIHVzaW5nIGl0LCBwbGVhc2UgZG9uYXRlLgogKiBodHRwOi8vYWxleGdvcmJhdGNoZXYuY29tL1N5bnRheEhpZ2hsaWdodGVyL2RvbmF0ZS5odG1sCiAqCiAqIEB2ZXJzaW9uCiAqIDMuMC44MyAoSnVseSAwMiAyMDEwKQogKiAKICogQGNvcHlyaWdodAogKiBDb3B5cmlnaHQgKEMpIDIwMDQtMjAxMCBBbGV4IEdvcmJhdGNoZXYuCiAqCiAqIEBsaWNlbnNlCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLgogKi8KLnN5bnRheGhpZ2hsaWdodGVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYxOTJhICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC5saW5lLmFsdDEgewogIGJhY2tncm91bmQtY29sb3I6ICMwZjE5MmEgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmxpbmUuYWx0MiB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzBmMTkyYSAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAubGluZS5oaWdobGlnaHRlZC5hbHQxLCAuc3ludGF4aGlnaGxpZ2h0ZXIgLmxpbmUuaGlnaGxpZ2h0ZWQuYWx0MiB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzI1M2U1YSAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAubGluZS5oaWdobGlnaHRlZC5udW1iZXIgewogIGNvbG9yOiAjMzg1NjZmICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIHRhYmxlIGNhcHRpb24gewogIGNvbG9yOiAjZDFlZGZmICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC5ndXR0ZXIgewogIGNvbG9yOiAjYWZhZmFmICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC5ndXR0ZXIgLmxpbmUgewogIGJvcmRlci1yaWdodDogM3B4IHNvbGlkICM0MzVhNWYgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmd1dHRlciAubGluZS5oaWdobGlnaHRlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzQzNWE1ZiAhaW1wb3J0YW50OwogIGNvbG9yOiAjMGYxOTJhICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyLnByaW50aW5nIC5saW5lIC5jb250ZW50IHsKICBib3JkZXI6IG5vbmUgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIuY29sbGFwc2VkIHsKICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlci5jb2xsYXBzZWQgLnRvb2xiYXIgewogIGNvbG9yOiAjNDI4YmRkICFpbXBvcnRhbnQ7CiAgYmFja2dyb3VuZDogYmxhY2sgIWltcG9ydGFudDsKICBib3JkZXI6IDFweCBzb2xpZCAjNDM1YTVmICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyLmNvbGxhcHNlZCAudG9vbGJhciBhIHsKICBjb2xvcjogIzQyOGJkZCAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlci5jb2xsYXBzZWQgLnRvb2xiYXIgYTpob3ZlciB7CiAgY29sb3I6ICMxZGMxMTYgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLnRvb2xiYXIgewogIGNvbG9yOiAjZDFlZGZmICFpbXBvcnRhbnQ7CiAgYmFja2dyb3VuZDogIzQzNWE1ZiAhaW1wb3J0YW50OwogIGJvcmRlcjogbm9uZSAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAudG9vbGJhciBhIHsKICBjb2xvcjogI2QxZWRmZiAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAudG9vbGJhciBhOmhvdmVyIHsKICBjb2xvcjogIzhhYTZjMSAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAucGxhaW4sIC5zeW50YXhoaWdobGlnaHRlciAucGxhaW4gYSB7CiAgY29sb3I6ICNkMWVkZmYgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmNvbW1lbnRzLCAuc3ludGF4aGlnaGxpZ2h0ZXIgLmNvbW1lbnRzIGEgewogIGNvbG9yOiAjNDI4YmRkICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC5zdHJpbmcsIC5zeW50YXhoaWdobGlnaHRlciAuc3RyaW5nIGEgewogIGNvbG9yOiAjMWRjMTE2ICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC5rZXl3b3JkIHsKICBjb2xvcjogI2I0M2QzZCAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAucHJlcHJvY2Vzc29yIHsKICBjb2xvcjogIzhhYTZjMSAhaW1wb3J0YW50Owp9Ci5zeW50YXhoaWdobGlnaHRlciAudmFyaWFibGUgewogIGNvbG9yOiAjZmZhYTNlICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC52YWx1ZSB7CiAgY29sb3I6ICNmN2U3NDEgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmZ1bmN0aW9ucyB7CiAgY29sb3I6ICNmZmFhM2UgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmNvbnN0YW50cyB7CiAgY29sb3I6ICNlMGU4ZmYgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLnNjcmlwdCB7CiAgZm9udC13ZWlnaHQ6IGJvbGQgIWltcG9ydGFudDsKICBjb2xvcjogI2I0M2QzZCAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtY29sb3I6IG5vbmUgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmNvbG9yMSwgLnN5bnRheGhpZ2hsaWdodGVyIC5jb2xvcjEgYSB7CiAgY29sb3I6ICNmOGJiMDAgIWltcG9ydGFudDsKfQouc3ludGF4aGlnaGxpZ2h0ZXIgLmNvbG9yMiwgLnN5bnRheGhpZ2hsaWdodGVyIC5jb2xvcjIgYSB7CiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7Cn0KLnN5bnRheGhpZ2hsaWdodGVyIC5jb2xvcjMsIC5zeW50YXhoaWdobGlnaHRlciAuY29sb3IzIGEgewogIGNvbG9yOiAjZmZhYTNlICFpbXBvcnRhbnQ7Cn0K';
/* github-like md.css */
@import 'data:text/stylesheet;base64,LyoKaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vYW5keWZlcnJhLzI1NTQ5MTkvcmF3LzJlNjZjYWJkYWZlMWM5YTdmMzU0YWEyZWJmNWJjMzgyNjVlNjM4ZTUvZ2l0aHViLmNzcwpodHRwczovL2dpc3QuZ2l0aHViLmNvbS9hbmR5ZmVycmEvMjU1NDkxOQoqLwpib2R5IHsKICBmb250LWZhbWlseTogSGVsdmV0aWNhLCBhcmlhbCwgc2Fucy1zZXJpZjsKICBmb250LXNpemU6IDE0cHg7CiAgbGluZS1oZWlnaHQ6IDEuNjsKICBwYWRkaW5nLXRvcDogMTBweDsKICBwYWRkaW5nLWJvdHRvbTogMTBweDsKICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTsKICBwYWRkaW5nOiAzMHB4OyB9Cgpib2R5ID4gKjpmaXJzdC1jaGlsZCB7CiAgbWFyZ2luLXRvcDogMCAhaW1wb3J0YW50OyB9CmJvZHkgPiAqOmxhc3QtY2hpbGQgewogIG1hcmdpbi1ib3R0b206IDAgIWltcG9ydGFudDsgfQoKYSB7CiAgY29sb3I6ICM0MTgzQzQ7IH0KYS5hYnNlbnQgewogIGNvbG9yOiAjY2MwMDAwOyB9CmEuYW5jaG9yIHsKICBkaXNwbGF5OiBibG9jazsKICBwYWRkaW5nLWxlZnQ6IDMwcHg7CiAgbWFyZ2luLWxlZnQ6IC0zMHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgYm90dG9tOiAwOyB9CgpoMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHsKICBtYXJnaW46IDIwcHggMCAxMHB4OwogIHBhZGRpbmc6IDA7CiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgY3Vyc29yOiB0ZXh0OwogIHBvc2l0aW9uOiByZWxhdGl2ZTsgfQoKaDE6aG92ZXIgYS5hbmNob3IsIGgyOmhvdmVyIGEuYW5jaG9yLCBoMzpob3ZlciBhLmFuY2hvciwgaDQ6aG92ZXIgYS5hbmNob3IsIGg1OmhvdmVyIGEuYW5jaG9yLCBoNjpob3ZlciBhLmFuY2hvciB7CiAgYmFja2dyb3VuZDogdXJsKCIuLi8uLi9pbWFnZXMvbW9kdWxlcy9zdHlsZWd1aWRlL3BhcmEucG5nIikgbm8tcmVwZWF0IDEwcHggY2VudGVyOwogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfQoKaDEgdHQsIGgxIGNvZGUgewogIGZvbnQtc2l6ZTogaW5oZXJpdDsgfQoKaDIgdHQsIGgyIGNvZGUgewogIGZvbnQtc2l6ZTogaW5oZXJpdDsgfQoKaDMgdHQsIGgzIGNvZGUgewogIGZvbnQtc2l6ZTogaW5oZXJpdDsgfQoKaDQgdHQsIGg0IGNvZGUgewogIGZvbnQtc2l6ZTogaW5oZXJpdDsgfQoKaDUgdHQsIGg1IGNvZGUgewogIGZvbnQtc2l6ZTogaW5oZXJpdDsgfQoKaDYgdHQsIGg2IGNvZGUgewogIGZvbnQtc2l6ZTogaW5oZXJpdDsgfQoKaDEgewogIGZvbnQtc2l6ZTogMjhweDsKICBjb2xvcjogYmxhY2s7IH0KCmgyIHsKICBmb250LXNpemU6IDI0cHg7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNjY2NjY2M7CiAgY29sb3I6IGJsYWNrOyB9CgpoMyB7CiAgZm9udC1zaXplOiAxOHB4OyB9CgpoNCB7CiAgZm9udC1zaXplOiAxNnB4OyB9CgpoNSB7CiAgZm9udC1zaXplOiAxNHB4OyB9CgpoNiB7CiAgY29sb3I6ICM3Nzc3Nzc7CiAgZm9udC1zaXplOiAxNHB4OyB9CgpwLCBibG9ja3F1b3RlLCB1bCwgb2wsIGRsLCBsaSwgdGFibGUsIHByZSB7CiAgbWFyZ2luOiAxNXB4IDA7IH0KCmhyIHsKICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCB1cmwoIi4uLy4uL2ltYWdlcy9tb2R1bGVzL3B1bGxzL2RpcnR5LXNoYWRlLnBuZyIpIHJlcGVhdC14IDAgMDsKICBib3JkZXI6IDAgbm9uZTsKICBjb2xvcjogI2NjY2NjYzsKICBoZWlnaHQ6IDRweDsKICBwYWRkaW5nOiAwOyB9Cgpib2R5ID4gaDI6Zmlyc3QtY2hpbGQgewogIG1hcmdpbi10b3A6IDA7CiAgcGFkZGluZy10b3A6IDA7IH0KYm9keSA+IGgxOmZpcnN0LWNoaWxkIHsKICBtYXJnaW4tdG9wOiAwOwogIHBhZGRpbmctdG9wOiAwOyB9CiAgYm9keSA+IGgxOmZpcnN0LWNoaWxkICsgaDIgewogICAgbWFyZ2luLXRvcDogMDsKICAgIHBhZGRpbmctdG9wOiAwOyB9CmJvZHkgPiBoMzpmaXJzdC1jaGlsZCwgYm9keSA+IGg0OmZpcnN0LWNoaWxkLCBib2R5ID4gaDU6Zmlyc3QtY2hpbGQsIGJvZHkgPiBoNjpmaXJzdC1jaGlsZCB7CiAgbWFyZ2luLXRvcDogMDsKICBwYWRkaW5nLXRvcDogMDsgfQoKYTpmaXJzdC1jaGlsZCBoMSwgYTpmaXJzdC1jaGlsZCBoMiwgYTpmaXJzdC1jaGlsZCBoMywgYTpmaXJzdC1jaGlsZCBoNCwgYTpmaXJzdC1jaGlsZCBoNSwgYTpmaXJzdC1jaGlsZCBoNiB7CiAgbWFyZ2luLXRvcDogMDsKICBwYWRkaW5nLXRvcDogMDsgfQoKaDEgcCwgaDIgcCwgaDMgcCwgaDQgcCwgaDUgcCwgaDYgcCB7CiAgbWFyZ2luLXRvcDogMDsgfQoKbGkgcC5maXJzdCB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9Cgp1bCwgb2wgewogIHBhZGRpbmctbGVmdDogMzBweDsgfQoKdWwgOmZpcnN0LWNoaWxkLCBvbCA6Zmlyc3QtY2hpbGQgewogIG1hcmdpbi10b3A6IDA7IH0KCnVsIDpsYXN0LWNoaWxkLCBvbCA6bGFzdC1jaGlsZCB7CiAgbWFyZ2luLWJvdHRvbTogMDsgfQoKZGwgewogIHBhZGRpbmc6IDA7IH0KICBkbCBkdCB7CiAgICBmb250LXNpemU6IDE0cHg7CiAgICBmb250LXdlaWdodDogYm9sZDsKICAgIGZvbnQtc3R5bGU6IGl0YWxpYzsKICAgIHBhZGRpbmc6IDA7CiAgICBtYXJnaW46IDE1cHggMCA1cHg7IH0KICAgIGRsIGR0OmZpcnN0LWNoaWxkIHsKICAgICAgcGFkZGluZzogMDsgfQogICAgZGwgZHQgPiA6Zmlyc3QtY2hpbGQgewogICAgICBtYXJnaW4tdG9wOiAwOyB9CiAgICBkbCBkdCA+IDpsYXN0LWNoaWxkIHsKICAgICAgbWFyZ2luLWJvdHRvbTogMDsgfQogIGRsIGRkIHsKICAgIG1hcmdpbjogMCAwIDE1cHg7CiAgICBwYWRkaW5nOiAwIDE1cHg7IH0KICAgIGRsIGRkID4gOmZpcnN0LWNoaWxkIHsKICAgICAgbWFyZ2luLXRvcDogMDsgfQogICAgZGwgZGQgPiA6bGFzdC1jaGlsZCB7CiAgICAgIG1hcmdpbi1ib3R0b206IDA7IH0KCmJsb2NrcXVvdGUgewogIGJvcmRlci1sZWZ0OiA0cHggc29saWQgI2RkZGRkZDsKICBwYWRkaW5nOiAwIDE1cHg7CiAgY29sb3I6ICM3Nzc3Nzc7IH0KICBibG9ja3F1b3RlID4gOmZpcnN0LWNoaWxkIHsKICAgIG1hcmdpbi10b3A6IDA7IH0KICBibG9ja3F1b3RlID4gOmxhc3QtY2hpbGQgewogICAgbWFyZ2luLWJvdHRvbTogMDsgfQoKdGFibGUgewogIHBhZGRpbmc6IDA7IH0KICB0YWJsZSB0ciB7CiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjY2NjYzsKICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOwogICAgbWFyZ2luOiAwOwogICAgcGFkZGluZzogMDsgfQogICAgdGFibGUgdHI6bnRoLWNoaWxkKDJuKSB7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7IH0KICAgIHRhYmxlIHRyIHRoIHsKICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2NjY2M7CiAgICAgIHRleHQtYWxpZ246IGxlZnQ7CiAgICAgIG1hcmdpbjogMDsKICAgICAgcGFkZGluZzogNnB4IDEzcHg7IH0KICAgIHRhYmxlIHRyIHRkIHsKICAgICAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYzsKICAgICAgdGV4dC1hbGlnbjogbGVmdDsKICAgICAgbWFyZ2luOiAwOwogICAgICBwYWRkaW5nOiA2cHggMTNweDsgfQogICAgdGFibGUgdHIgdGggOmZpcnN0LWNoaWxkLCB0YWJsZSB0ciB0ZCA6Zmlyc3QtY2hpbGQgewogICAgICBtYXJnaW4tdG9wOiAwOyB9CiAgICB0YWJsZSB0ciB0aCA6bGFzdC1jaGlsZCwgdGFibGUgdHIgdGQgOmxhc3QtY2hpbGQgewogICAgICBtYXJnaW4tYm90dG9tOiAwOyB9CgppbWcgewogIG1heC13aWR0aDogMTAwJTsgfQoKc3Bhbi5mcmFtZSB7CiAgZGlzcGxheTogYmxvY2s7CiAgb3ZlcmZsb3c6IGhpZGRlbjsgfQogIHNwYW4uZnJhbWUgPiBzcGFuIHsKICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGRkZGQ7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIGZsb2F0OiBsZWZ0OwogICAgb3ZlcmZsb3c6IGhpZGRlbjsKICAgIG1hcmdpbjogMTNweCAwIDA7CiAgICBwYWRkaW5nOiA3cHg7CiAgICB3aWR0aDogYXV0bzsgfQogIHNwYW4uZnJhbWUgc3BhbiBpbWcgewogICAgZGlzcGxheTogYmxvY2s7CiAgICBmbG9hdDogbGVmdDsgfQogIHNwYW4uZnJhbWUgc3BhbiBzcGFuIHsKICAgIGNsZWFyOiBib3RoOwogICAgY29sb3I6ICMzMzMzMzM7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIHBhZGRpbmc6IDVweCAwIDA7IH0Kc3Bhbi5hbGlnbi1jZW50ZXIgewogIGRpc3BsYXk6IGJsb2NrOwogIG92ZXJmbG93OiBoaWRkZW47CiAgY2xlYXI6IGJvdGg7IH0KICBzcGFuLmFsaWduLWNlbnRlciA+IHNwYW4gewogICAgZGlzcGxheTogYmxvY2s7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgbWFyZ2luOiAxM3B4IGF1dG8gMDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfQogIHNwYW4uYWxpZ24tY2VudGVyIHNwYW4gaW1nIHsKICAgIG1hcmdpbjogMCBhdXRvOwogICAgdGV4dC1hbGlnbjogY2VudGVyOyB9CnNwYW4uYWxpZ24tcmlnaHQgewogIGRpc3BsYXk6IGJsb2NrOwogIG92ZXJmbG93OiBoaWRkZW47CiAgY2xlYXI6IGJvdGg7IH0KICBzcGFuLmFsaWduLXJpZ2h0ID4gc3BhbiB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICBtYXJnaW46IDEzcHggMCAwOwogICAgdGV4dC1hbGlnbjogcmlnaHQ7IH0KICBzcGFuLmFsaWduLXJpZ2h0IHNwYW4gaW1nIHsKICAgIG1hcmdpbjogMDsKICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9CnNwYW4uZmxvYXQtbGVmdCB7CiAgZGlzcGxheTogYmxvY2s7CiAgbWFyZ2luLXJpZ2h0OiAxM3B4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgZmxvYXQ6IGxlZnQ7IH0KICBzcGFuLmZsb2F0LWxlZnQgc3BhbiB7CiAgICBtYXJnaW46IDEzcHggMCAwOyB9CnNwYW4uZmxvYXQtcmlnaHQgewogIGRpc3BsYXk6IGJsb2NrOwogIG1hcmdpbi1sZWZ0OiAxM3B4OwogIG92ZXJmbG93OiBoaWRkZW47CiAgZmxvYXQ6IHJpZ2h0OyB9CiAgc3Bhbi5mbG9hdC1yaWdodCA+IHNwYW4gewogICAgZGlzcGxheTogYmxvY2s7CiAgICBvdmVyZmxvdzogaGlkZGVuOwogICAgbWFyZ2luOiAxM3B4IGF1dG8gMDsKICAgIHRleHQtYWxpZ246IHJpZ2h0OyB9Cgpjb2RlLCB0dCB7CiAgbWFyZ2luOiAwIDJweDsKICBwYWRkaW5nOiAwIDVweDsKICB3aGl0ZS1zcGFjZTogbm93cmFwOwogIGJvcmRlcjogMXB4IHNvbGlkICNlYWVhZWE7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODsKICBib3JkZXItcmFkaXVzOiAzcHg7IH0KCnByZSBjb2RlIHsKICBtYXJnaW46IDA7CiAgcGFkZGluZzogMDsKICB3aGl0ZS1zcGFjZTogcHJlOwogIGJvcmRlcjogbm9uZTsKICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfQoKLmhpZ2hsaWdodCBwcmUgewogIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYzsKICBmb250LXNpemU6IDEzcHg7CiAgbGluZS1oZWlnaHQ6IDE5cHg7CiAgb3ZlcmZsb3c6IGF1dG87CiAgcGFkZGluZzogNnB4IDEwcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OyB9CgpwcmUgewogIGJhY2tncm91bmQtY29sb3I6ICNmOGY4Zjg7CiAgYm9yZGVyOiAxcHggc29saWQgI2NjY2NjYzsKICBmb250LXNpemU6IDEzcHg7CiAgbGluZS1oZWlnaHQ6IDE5cHg7CiAgb3ZlcmZsb3c6IGF1dG87CiAgcGFkZGluZzogNnB4IDEwcHg7CiAgYm9yZGVyLXJhZGl1czogM3B4OyB9CiAgcHJlIGNvZGUsIHByZSB0dCB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsKICAgIGJvcmRlcjogbm9uZTsgfQ==';
</style><!--
	shCore.js            --><script markdown=0 type="text/javascript" src="data:text/stylesheet;base64,"></script><!--
	shBrushBash.js       --><script markdown=0 type="text/javascript" src="data:text/stylesheet;base64,LyoqCiAqIFN5bnRheEhpZ2hsaWdodGVyCiAqIGh0dHA6Ly9hbGV4Z29yYmF0Y2hldi5jb20vU3ludGF4SGlnaGxpZ2h0ZXIKICoKICogU3ludGF4SGlnaGxpZ2h0ZXIgaXMgZG9uYXRpb253YXJlLiBJZiB5b3UgYXJlIHVzaW5nIGl0LCBwbGVhc2UgZG9uYXRlLgogKiBodHRwOi8vYWxleGdvcmJhdGNoZXYuY29tL1N5bnRheEhpZ2hsaWdodGVyL2RvbmF0ZS5odG1sCiAqCiAqIEB2ZXJzaW9uCiAqIDMuMC44MyAoSnVseSAwMiAyMDEwKQogKiAKICogQGNvcHlyaWdodAogKiBDb3B5cmlnaHQgKEMpIDIwMDQtMjAxMCBBbGV4IEdvcmJhdGNoZXYuCiAqCiAqIEBsaWNlbnNlCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLgogKi8KOyhmdW5jdGlvbigpCnsKCS8vIENvbW1vbkpTCgl0eXBlb2YocmVxdWlyZSkgIT0gJ3VuZGVmaW5lZCcgPyBTeW50YXhIaWdobGlnaHRlciA9IHJlcXVpcmUoJ3NoQ29yZScpLlN5bnRheEhpZ2hsaWdodGVyIDogbnVsbDsKCglmdW5jdGlvbiBCcnVzaCgpCgl7CgkJdmFyIGtleXdvcmRzID0JJ2lmIGZpIHRoZW4gZWxpZiBlbHNlIGZvciBkbyBkb25lIHVudGlsIHdoaWxlIGJyZWFrIGNvbnRpbnVlIGNhc2UgZnVuY3Rpb24gcmV0dXJuIGluIGVxIG5lIGdlIGxlJzsKCQl2YXIgY29tbWFuZHMgPSAgJ2FsaWFzIGFwcm9wb3MgYXdrIGJhc2VuYW1lIGJhc2ggYmMgYmcgYnVpbHRpbiBiemlwMiBjYWwgY2F0IGNkIGNmZGlzayBjaGdycCBjaG1vZCBjaG93biBjaHJvb3QnICsKCQkJCQkJJ2Nrc3VtIGNsZWFyIGNtcCBjb21tIGNvbW1hbmQgY29weSBjcCBjcm9uIGNyb250YWIgY3NwbGl0IGN1dCBkYXRlIGRjIGRkIGRkcmVzY3VlIGRlY2xhcmUgZGYgJyArCgkJCQkJCSdkaWZmIGRpZmYzIGRpZyBkaXIgZGlyY29sb3JzIGRpcm5hbWUgZGlycyBkdSBlY2hvIGVncmVwIGVqZWN0IGVuYWJsZSBlbnYgZXRodG9vbCBldmFsICcgKwoJCQkJCQknZXhlYyBleGl0IGV4cGFuZCBleHBvcnQgZXhwciBmYWxzZSBmZGZvcm1hdCBmZGlzayBmZyBmZ3JlcCBmaWxlIGZpbmQgZm10IGZvbGQgZm9ybWF0ICcgKwoJCQkJCQknZnJlZSBmc2NrIGZ0cCBnYXdrIGdldG9wdHMgZ3JlcCBncm91cHMgZ3ppcCBoYXNoIGhlYWQgaGlzdG9yeSBob3N0bmFtZSBpZCBpZmNvbmZpZyAnICsKCQkJCQkJJ2ltcG9ydCBpbnN0YWxsIGpvaW4ga2lsbCBsZXNzIGxldCBsbiBsb2NhbCBsb2NhdGUgbG9nbmFtZSBsb2dvdXQgbG9vayBscGMgbHByIGxwcmludCAnICsKCQkJCQkJJ2xwcmludGQgbHByaW50cSBscHJtIGxzIGxzb2YgbWFrZSBtYW4gbWtkaXIgbWtmaWZvIG1raXNvZnMgbWtub2QgbW9yZSBtb3VudCBtdG9vbHMgJyArCgkJCQkJCSdtdiBuZXRzdGF0IG5pY2Ugbmwgbm9odXAgbnNsb29rdXAgb3BlbiBvcCBwYXNzd2QgcGFzdGUgcGF0aGNoayBwYXVzZSBwaW5nIHBvcGQgcHIgcHJpbnRjYXAgJyArCgkJCQkJCSdwcmludGVudiBwcmludGYgcHMgcHVzaGQgcHdkIHF1b3RhIHF1b3RhY2hlY2sgcXVvdGFjdGwgcmFtIHJjcCByZWFkIHJlYWRvbmx5IHJlbmljZSAnICsKCQkJCQkJJ3JlbXN5bmMgcm0gcm1kaXIgcnN5bmMgc2NyZWVuIHNjcCBzZGlmZiBzZWQgc2VsZWN0IHNlcSBzZXQgc2Z0cCBzaGlmdCBzaG9wdCBzaHV0ZG93biAnICsKCQkJCQkJJ3NsZWVwIHNvcnQgc291cmNlIHNwbGl0IHNzaCBzdHJhY2Ugc3Ugc3VkbyBzdW0gc3ltbGluayBzeW5jIHRhaWwgdGFyIHRlZSB0ZXN0IHRpbWUgJyArCgkJCQkJCSd0aW1lcyB0b3VjaCB0b3AgdHJhY2Vyb3V0ZSB0cmFwIHRyIHRydWUgdHNvcnQgdHR5IHR5cGUgdWxpbWl0IHVtYXNrIHVtb3VudCB1bmFsaWFzICcgKwoJCQkJCQkndW5hbWUgdW5leHBhbmQgdW5pcSB1bml0cyB1bnNldCB1bnNoYXIgdXNlcmFkZCB1c2VybW9kIHVzZXJzIHV1ZW5jb2RlIHV1ZGVjb2RlIHYgdmRpciAnICsKCQkJCQkJJ3ZpIHdhdGNoIHdjIHdoZXJlaXMgd2hpY2ggd2hvIHdob2FtaSBXZ2V0IHhhcmdzIHllcycKCQkJCQkJOwoKCQl0aGlzLnJlZ2V4TGlzdCA9IFsKCQkJeyByZWdleDogL14jIS4qJC9nbSwJCQkJCQkJCQkJCWNzczogJ3ByZXByb2Nlc3NvciBib2xkJyB9LAoJCQl7IHJlZ2V4OiAvXC9bXHctXC9dKy9nbSwJCQkJCQkJCQkJY3NzOiAncGxhaW4nIH0sCgkJCXsgcmVnZXg6IFN5bnRheEhpZ2hsaWdodGVyLnJlZ2V4TGliLnNpbmdsZUxpbmVQZXJsQ29tbWVudHMsCQljc3M6ICdjb21tZW50cycgfSwJCS8vIG9uZSBsaW5lIGNvbW1lbnRzCgkJCXsgcmVnZXg6IFN5bnRheEhpZ2hsaWdodGVyLnJlZ2V4TGliLmRvdWJsZVF1b3RlZFN0cmluZywJCQljc3M6ICdzdHJpbmcnIH0sCQkvLyBkb3VibGUgcXVvdGVkIHN0cmluZ3MKCQkJeyByZWdleDogU3ludGF4SGlnaGxpZ2h0ZXIucmVnZXhMaWIuc2luZ2xlUXVvdGVkU3RyaW5nLAkJCWNzczogJ3N0cmluZycgfSwJCS8vIHNpbmdsZSBxdW90ZWQgc3RyaW5ncwoJCQl7IHJlZ2V4OiBuZXcgUmVnRXhwKHRoaXMuZ2V0S2V5d29yZHMoa2V5d29yZHMpLCAnZ20nKSwJCQljc3M6ICdrZXl3b3JkJyB9LAkJLy8ga2V5d29yZHMKCQkJeyByZWdleDogbmV3IFJlZ0V4cCh0aGlzLmdldEtleXdvcmRzKGNvbW1hbmRzKSwgJ2dtJyksCQkJY3NzOiAnZnVuY3Rpb25zJyB9CQkvLyBjb21tYW5kcwoJCQldOwoJfQoKCUJydXNoLnByb3RvdHlwZQk9IG5ldyBTeW50YXhIaWdobGlnaHRlci5IaWdobGlnaHRlcigpOwoJQnJ1c2guYWxpYXNlcwk9IFsnYmFzaCcsICdzaGVsbCddOwoKCVN5bnRheEhpZ2hsaWdodGVyLmJydXNoZXMuQmFzaCA9IEJydXNoOwoKCS8vIENvbW1vbkpTCgl0eXBlb2YoZXhwb3J0cykgIT0gJ3VuZGVmaW5lZCcgPyBleHBvcnRzLkJydXNoID0gQnJ1c2ggOiBudWxsOwp9KSgpOwo="></script><!--
	shBrushCpp           --><script markdown=0 type="text/javascript" src="data:text/stylesheet;base64,LyoqCiAqIFN5bnRheEhpZ2hsaWdodGVyCiAqIGh0dHA6Ly9hbGV4Z29yYmF0Y2hldi5jb20vU3ludGF4SGlnaGxpZ2h0ZXIKICoKICogU3ludGF4SGlnaGxpZ2h0ZXIgaXMgZG9uYXRpb253YXJlLiBJZiB5b3UgYXJlIHVzaW5nIGl0LCBwbGVhc2UgZG9uYXRlLgogKiBodHRwOi8vYWxleGdvcmJhdGNoZXYuY29tL1N5bnRheEhpZ2hsaWdodGVyL2RvbmF0ZS5odG1sCiAqCiAqIEB2ZXJzaW9uCiAqIDMuMC44MyAoSnVseSAwMiAyMDEwKQogKiAKICogQGNvcHlyaWdodAogKiBDb3B5cmlnaHQgKEMpIDIwMDQtMjAxMCBBbGV4IEdvcmJhdGNoZXYuCiAqCiAqIEBsaWNlbnNlCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLgogKi8KOyhmdW5jdGlvbigpCnsKCS8vIENvbW1vbkpTCgl0eXBlb2YocmVxdWlyZSkgIT0gJ3VuZGVmaW5lZCcgPyBTeW50YXhIaWdobGlnaHRlciA9IHJlcXVpcmUoJ3NoQ29yZScpLlN5bnRheEhpZ2hsaWdodGVyIDogbnVsbDsKCglmdW5jdGlvbiBCcnVzaCgpCgl7CgkJLy8gQ29weXJpZ2h0IDIwMDYgU2hpbiwgWW91bmdKaW4KCQoJCXZhciBkYXRhdHlwZXMgPQknQVRPTSBCT09MIEJPT0xFQU4gQllURSBDSEFSIENPTE9SUkVGIERXT1JEIERXT1JETE9ORyBEV09SRF9QVFIgJyArCgkJCQkJCSdEV09SRDMyIERXT1JENjQgRkxPQVQgSEFDQ0VMIEhBTEZfUFRSIEhBTkRMRSBIQklUTUFQIEhCUlVTSCAnICsKCQkJCQkJJ0hDT0xPUlNQQUNFIEhDT05WIEhDT05WTElTVCBIQ1VSU09SIEhEQyBIRERFREFUQSBIREVTSyBIRFJPUCBIRFdQICcgKwoJCQkJCQknSEVOSE1FVEFGSUxFIEhGSUxFIEhGT05UIEhHRElPQkogSEdMT0JBTCBISE9PSyBISUNPTiBISU5TVEFOQ0UgSEtFWSAnICsKCQkJCQkJJ0hLTCBITE9DQUwgSE1FTlUgSE1FVEFGSUxFIEhNT0RVTEUgSE1PTklUT1IgSFBBTEVUVEUgSFBFTiBIUkVTVUxUICcgKwoJCQkJCQknSFJHTiBIUlNSQyBIU1ogSFdJTlNUQSBIV05EIElOVCBJTlRfUFRSIElOVDMyIElOVDY0IExBTkdJRCBMQ0lEIExDVFlQRSAnICsKCQkJCQkJJ0xHUlBJRCBMT05HIExPTkdMT05HIExPTkdfUFRSIExPTkczMiBMT05HNjQgTFBBUkFNIExQQk9PTCBMUEJZVEUgTFBDT0xPUlJFRiAnICsKCQkJCQkJJ0xQQ1NUUiBMUENUU1RSIExQQ1ZPSUQgTFBDV1NUUiBMUERXT1JEIExQSEFORExFIExQSU5UIExQTE9ORyBMUFNUUiBMUFRTVFIgJyArCgkJCQkJCSdMUFZPSUQgTFBXT1JEIExQV1NUUiBMUkVTVUxUIFBCT09MIFBCT09MRUFOIFBCWVRFIFBDSEFSIFBDU1RSIFBDVFNUUiBQQ1dTVFIgJyArCgkJCQkJCSdQRFdPUkRMT05HIFBEV09SRF9QVFIgUERXT1JEMzIgUERXT1JENjQgUEZMT0FUIFBIQUxGX1BUUiBQSEFORExFIFBIS0VZIFBJTlQgJyArCgkJCQkJCSdQSU5UX1BUUiBQSU5UMzIgUElOVDY0IFBMQ0lEIFBMT05HIFBMT05HTE9ORyBQTE9OR19QVFIgUExPTkczMiBQTE9ORzY0IFBPSU5URVJfMzIgJyArCgkJCQkJCSdQT0lOVEVSXzY0IFBTSE9SVCBQU0laRV9UIFBTU0laRV9UIFBTVFIgUFRCWVRFIFBUQ0hBUiBQVFNUUiBQVUNIQVIgUFVIQUxGX1BUUiAnICsKCQkJCQkJJ1BVSU5UIFBVSU5UX1BUUiBQVUlOVDMyIFBVSU5UNjQgUFVMT05HIFBVTE9OR0xPTkcgUFVMT05HX1BUUiBQVUxPTkczMiBQVUxPTkc2NCAnICsKCQkJCQkJJ1BVU0hPUlQgUFZPSUQgUFdDSEFSIFBXT1JEIFBXU1RSIFNDX0hBTkRMRSBTQ19MT0NLIFNFUlZJQ0VfU1RBVFVTX0hBTkRMRSBTSE9SVCAnICsKCQkJCQkJJ1NJWkVfVCBTU0laRV9UIFRCWVRFIFRDSEFSIFVDSEFSIFVIQUxGX1BUUiBVSU5UIFVJTlRfUFRSIFVJTlQzMiBVSU5UNjQgVUxPTkcgJyArCgkJCQkJCSdVTE9OR0xPTkcgVUxPTkdfUFRSIFVMT05HMzIgVUxPTkc2NCBVU0hPUlQgVVNOIFZPSUQgV0NIQVIgV09SRCBXUEFSQU0gV1BBUkFNIFdQQVJBTSAnICsKCQkJCQkJJ2NoYXIgYm9vbCBzaG9ydCBpbnQgX19pbnQzMiBfX2ludDY0IF9faW50OCBfX2ludDE2IGxvbmcgZmxvYXQgZG91YmxlIF9fd2NoYXJfdCAnICsKCQkJCQkJJ2Nsb2NrX3QgX2NvbXBsZXggX2Rldl90IF9kaXNrZnJlZV90IGRpdl90IGxkaXZfdCBfZXhjZXB0aW9uIF9FWENFUFRJT05fUE9JTlRFUlMgJyArCgkJCQkJCSdGSUxFIF9maW5kZGF0YV90IF9maW5kZGF0YWk2NF90IF93ZmluZGRhdGFfdCBfd2ZpbmRkYXRhaTY0X3QgX19maW5kZGF0YTY0X3QgJyArCgkJCQkJCSdfX3dmaW5kZGF0YTY0X3QgX0ZQSUVFRV9SRUNPUkQgZnBvc190IF9IRUFQSU5GTyBfSEZJTEUgbGNvbnYgaW50cHRyX3QgJyArCgkJCQkJCSdqbXBfYnVmIG1ic3RhdGVfdCBfb2ZmX3QgX29uZXhpdF90IF9QTkggcHRyZGlmZl90IF9wdXJlY2FsbF9oYW5kbGVyICcgKwoJCQkJCQknc2lnX2F0b21pY190IHNpemVfdCBfc3RhdCBfX3N0YXQ2NCBfc3RhdGk2NCB0ZXJtaW5hdGVfZnVuY3Rpb24gJyArCgkJCQkJCSd0aW1lX3QgX190aW1lNjRfdCBfdGltZWIgX190aW1lYjY0IHRtIHVpbnRwdHJfdCBfdXRpbWJ1ZiAnICsKCQkJCQkJJ3ZhX2xpc3Qgd2NoYXJfdCB3Y3RyYW5zX3Qgd2N0eXBlX3Qgd2ludF90IHNpZ25lZCc7CgoJCXZhciBrZXl3b3JkcyA9CSdicmVhayBjYXNlIGNhdGNoIGNsYXNzIGNvbnN0IF9fZmluYWxseSBfX2V4Y2VwdGlvbiBfX3RyeSAnICsKCQkJCQkJJ2NvbnN0X2Nhc3QgY29udGludWUgcHJpdmF0ZSBwdWJsaWMgcHJvdGVjdGVkIF9fZGVjbHNwZWMgJyArCgkJCQkJCSdkZWZhdWx0IGRlbGV0ZSBkZXByZWNhdGVkIGRsbGV4cG9ydCBkbGxpbXBvcnQgZG8gZHluYW1pY19jYXN0ICcgKwoJCQkJCQknZWxzZSBlbnVtIGV4cGxpY2l0IGV4dGVybiBpZiBmb3IgZnJpZW5kIGdvdG8gaW5saW5lICcgKwoJCQkJCQknbXV0YWJsZSBuYWtlZCBuYW1lc3BhY2UgbmV3IG5vaW5saW5lIG5vcmV0dXJuIG5vdGhyb3cgJyArCgkJCQkJCSdyZWdpc3RlciByZWludGVycHJldF9jYXN0IHJldHVybiBzZWxlY3RhbnkgJyArCgkJCQkJCSdzaXplb2Ygc3RhdGljIHN0YXRpY19jYXN0IHN0cnVjdCBzd2l0Y2ggdGVtcGxhdGUgdGhpcyAnICsKCQkJCQkJJ3RocmVhZCB0aHJvdyB0cnVlIGZhbHNlIHRyeSB0eXBlZGVmIHR5cGVpZCB0eXBlbmFtZSB1bmlvbiAnICsKCQkJCQkJJ3VzaW5nIHV1aWQgdmlydHVhbCB2b2lkIHZvbGF0aWxlIHdoY2FyX3Qgd2hpbGUnOwoJCQkJCQoJCXZhciBmdW5jdGlvbnMgPQknYXNzZXJ0IGlzYWxudW0gaXNhbHBoYSBpc2NudHJsIGlzZGlnaXQgaXNncmFwaCBpc2xvd2VyIGlzcHJpbnQnICsKCQkJCQkJJ2lzcHVuY3QgaXNzcGFjZSBpc3VwcGVyIGlzeGRpZ2l0IHRvbG93ZXIgdG91cHBlciBlcnJubyBsb2NhbGVjb252ICcgKwoJCQkJCQknc2V0bG9jYWxlIGFjb3MgYXNpbiBhdGFuIGF0YW4yIGNlaWwgY29zIGNvc2ggZXhwIGZhYnMgZmxvb3IgZm1vZCAnICsKCQkJCQkJJ2ZyZXhwIGxkZXhwIGxvZyBsb2cxMCBtb2RmIHBvdyBzaW4gc2luaCBzcXJ0IHRhbiB0YW5oIGptcF9idWYgJyArCgkJCQkJCSdsb25nam1wIHNldGptcCByYWlzZSBzaWduYWwgc2lnX2F0b21pY190IHZhX2FyZyB2YV9lbmQgdmFfc3RhcnQgJyArCgkJCQkJCSdjbGVhcmVyciBmY2xvc2UgZmVvZiBmZXJyb3IgZmZsdXNoIGZnZXRjIGZnZXRwb3MgZmdldHMgZm9wZW4gJyArCgkJCQkJCSdmcHJpbnRmIGZwdXRjIGZwdXRzIGZyZWFkIGZyZW9wZW4gZnNjYW5mIGZzZWVrIGZzZXRwb3MgZnRlbGwgJyArCgkJCQkJCSdmd3JpdGUgZ2V0YyBnZXRjaGFyIGdldHMgcGVycm9yIHByaW50ZiBwdXRjIHB1dGNoYXIgcHV0cyByZW1vdmUgJyArCgkJCQkJCSdyZW5hbWUgcmV3aW5kIHNjYW5mIHNldGJ1ZiBzZXR2YnVmIHNwcmludGYgc3NjYW5mIHRtcGZpbGUgdG1wbmFtICcgKwoJCQkJCQkndW5nZXRjIHZmcHJpbnRmIHZwcmludGYgdnNwcmludGYgYWJvcnQgYWJzIGF0ZXhpdCBhdG9mIGF0b2kgYXRvbCAnICsKCQkJCQkJJ2JzZWFyY2ggY2FsbG9jIGRpdiBleGl0IGZyZWUgZ2V0ZW52IGxhYnMgbGRpdiBtYWxsb2MgbWJsZW4gbWJzdG93Y3MgJyArCgkJCQkJCSdtYnRvd2MgcXNvcnQgcmFuZCByZWFsbG9jIHNyYW5kIHN0cnRvZCBzdHJ0b2wgc3RydG91bCBzeXN0ZW0gJyArCgkJCQkJCSd3Y3N0b21icyB3Y3RvbWIgbWVtY2hyIG1lbWNtcCBtZW1jcHkgbWVtbW92ZSBtZW1zZXQgc3RyY2F0IHN0cmNociAnICsKCQkJCQkJJ3N0cmNtcCBzdHJjb2xsIHN0cmNweSBzdHJjc3BuIHN0cmVycm9yIHN0cmxlbiBzdHJuY2F0IHN0cm5jbXAgJyArCgkJCQkJCSdzdHJuY3B5IHN0cnBicmsgc3RycmNociBzdHJzcG4gc3Ryc3RyIHN0cnRvayBzdHJ4ZnJtIGFzY3RpbWUgJyArCgkJCQkJCSdjbG9jayBjdGltZSBkaWZmdGltZSBnbXRpbWUgbG9jYWx0aW1lIG1rdGltZSBzdHJmdGltZSB0aW1lJzsKCgkJdGhpcy5yZWdleExpc3QgPSBbCgkJCXsgcmVnZXg6IFN5bnRheEhpZ2hsaWdodGVyLnJlZ2V4TGliLnNpbmdsZUxpbmVDQ29tbWVudHMsCWNzczogJ2NvbW1lbnRzJyB9LAkJCS8vIG9uZSBsaW5lIGNvbW1lbnRzCgkJCXsgcmVnZXg6IFN5bnRheEhpZ2hsaWdodGVyLnJlZ2V4TGliLm11bHRpTGluZUNDb21tZW50cywJCWNzczogJ2NvbW1lbnRzJyB9LAkJCS8vIG11bHRpbGluZSBjb21tZW50cwoJCQl7IHJlZ2V4OiBTeW50YXhIaWdobGlnaHRlci5yZWdleExpYi5kb3VibGVRdW90ZWRTdHJpbmcsCQljc3M6ICdzdHJpbmcnIH0sCQkJLy8gc3RyaW5ncwoJCQl7IHJlZ2V4OiBTeW50YXhIaWdobGlnaHRlci5yZWdleExpYi5zaW5nbGVRdW90ZWRTdHJpbmcsCQljc3M6ICdzdHJpbmcnIH0sCQkJLy8gc3RyaW5ncwoJCQl7IHJlZ2V4OiAvXiAqIy4qL2dtLAkJCQkJCQkJCQljc3M6ICdwcmVwcm9jZXNzb3InIH0sCgkJCXsgcmVnZXg6IG5ldyBSZWdFeHAodGhpcy5nZXRLZXl3b3JkcyhkYXRhdHlwZXMpLCAnZ20nKSwJCWNzczogJ2NvbG9yMSBib2xkJyB9LAoJCQl7IHJlZ2V4OiBuZXcgUmVnRXhwKHRoaXMuZ2V0S2V5d29yZHMoZnVuY3Rpb25zKSwgJ2dtJyksCQljc3M6ICdmdW5jdGlvbnMgYm9sZCcgfSwKCQkJeyByZWdleDogbmV3IFJlZ0V4cCh0aGlzLmdldEtleXdvcmRzKGtleXdvcmRzKSwgJ2dtJyksCQljc3M6ICdrZXl3b3JkIGJvbGQnIH0KCQkJXTsKCX07CgoJQnJ1c2gucHJvdG90eXBlCT0gbmV3IFN5bnRheEhpZ2hsaWdodGVyLkhpZ2hsaWdodGVyKCk7CglCcnVzaC5hbGlhc2VzCT0gWydjcHAnLCAnYyddOwoKCVN5bnRheEhpZ2hsaWdodGVyLmJydXNoZXMuQ3BwID0gQnJ1c2g7CgoJLy8gQ29tbW9uSlMKCXR5cGVvZihleHBvcnRzKSAhPSAndW5kZWZpbmVkJyA/IGV4cG9ydHMuQnJ1c2ggPSBCcnVzaCA6IG51bGw7Cn0pKCk7Cg=="></script><!--
	shBrushCSharp.js     --><script markdown=0 type="text/javascript" src="data:text/stylesheet;base64,LyoqCiAqIFN5bnRheEhpZ2hsaWdodGVyCiAqIGh0dHA6Ly9hbGV4Z29yYmF0Y2hldi5jb20vU3ludGF4SGlnaGxpZ2h0ZXIKICoKICogU3ludGF4SGlnaGxpZ2h0ZXIgaXMgZG9uYXRpb253YXJlLiBJZiB5b3UgYXJlIHVzaW5nIGl0LCBwbGVhc2UgZG9uYXRlLgogKiBodHRwOi8vYWxleGdvcmJhdGNoZXYuY29tL1N5bnRheEhpZ2hsaWdodGVyL2RvbmF0ZS5odG1sCiAqCiAqIEB2ZXJzaW9uCiAqIDMuMC44MyAoSnVseSAwMiAyMDEwKQogKiAKICogQGNvcHlyaWdodAogKiBDb3B5cmlnaHQgKEMpIDIwMDQtMjAxMCBBbGV4IEdvcmJhdGNoZXYuCiAqCiAqIEBsaWNlbnNlCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLgogKi8KOyhmdW5jdGlvbigpCnsKCS8vIENvbW1vbkpTCgl0eXBlb2YocmVxdWlyZSkgIT0gJ3VuZGVmaW5lZCcgPyBTeW50YXhIaWdobGlnaHRlciA9IHJlcXVpcmUoJ3NoQ29yZScpLlN5bnRheEhpZ2hsaWdodGVyIDogbnVsbDsKCglmdW5jdGlvbiBCcnVzaCgpCgl7CgkJdmFyIGtleXdvcmRzID0JJ2Fic3RyYWN0IGFzIGJhc2UgYm9vbCBicmVhayBieXRlIGNhc2UgY2F0Y2ggY2hhciBjaGVja2VkIGNsYXNzIGNvbnN0ICcgKwoJCQkJCQknY29udGludWUgZGVjaW1hbCBkZWZhdWx0IGRlbGVnYXRlIGRvIGRvdWJsZSBlbHNlIGVudW0gZXZlbnQgZXhwbGljaXQgJyArCgkJCQkJCSdleHRlcm4gZmFsc2UgZmluYWxseSBmaXhlZCBmbG9hdCBmb3IgZm9yZWFjaCBnZXQgZ290byBpZiBpbXBsaWNpdCBpbiBpbnQgJyArCgkJCQkJCSdpbnRlcmZhY2UgaW50ZXJuYWwgaXMgbG9jayBsb25nIG5hbWVzcGFjZSBuZXcgbnVsbCBvYmplY3Qgb3BlcmF0b3Igb3V0ICcgKwoJCQkJCQknb3ZlcnJpZGUgcGFyYW1zIHByaXZhdGUgcHJvdGVjdGVkIHB1YmxpYyByZWFkb25seSByZWYgcmV0dXJuIHNieXRlIHNlYWxlZCBzZXQgJyArCgkJCQkJCSdzaG9ydCBzaXplb2Ygc3RhY2thbGxvYyBzdGF0aWMgc3RyaW5nIHN0cnVjdCBzd2l0Y2ggdGhpcyB0aHJvdyB0cnVlIHRyeSAnICsKCQkJCQkJJ3R5cGVvZiB1aW50IHVsb25nIHVuY2hlY2tlZCB1bnNhZmUgdXNob3J0IHVzaW5nIHZpcnR1YWwgdm9pZCB3aGlsZSc7CgoJCWZ1bmN0aW9uIGZpeENvbW1lbnRzKG1hdGNoLCByZWdleEluZm8pCgkJewoJCQl2YXIgY3NzID0gKG1hdGNoWzBdLmluZGV4T2YoIi8vLyIpID09IDApCgkJCQk/ICdjb2xvcjEnCgkJCQk6ICdjb21tZW50cycKCQkJCTsKCQkJCgkJCXJldHVybiBbbmV3IFN5bnRheEhpZ2hsaWdodGVyLk1hdGNoKG1hdGNoWzBdLCBtYXRjaC5pbmRleCwgY3NzKV07CgkJfQoKCQl0aGlzLnJlZ2V4TGlzdCA9IFsKCQkJeyByZWdleDogU3ludGF4SGlnaGxpZ2h0ZXIucmVnZXhMaWIuc2luZ2xlTGluZUNDb21tZW50cywJZnVuYyA6IGZpeENvbW1lbnRzIH0sCQkvLyBvbmUgbGluZSBjb21tZW50cwoJCQl7IHJlZ2V4OiBTeW50YXhIaWdobGlnaHRlci5yZWdleExpYi5tdWx0aUxpbmVDQ29tbWVudHMsCQljc3M6ICdjb21tZW50cycgfSwJCQkvLyBtdWx0aWxpbmUgY29tbWVudHMKCQkJeyByZWdleDogL0AiKD86W14iXXwiIikqIi9nLAkJCQkJCQkJY3NzOiAnc3RyaW5nJyB9LAkJCS8vIEAtcXVvdGVkIHN0cmluZ3MKCQkJeyByZWdleDogU3ludGF4SGlnaGxpZ2h0ZXIucmVnZXhMaWIuZG91YmxlUXVvdGVkU3RyaW5nLAkJY3NzOiAnc3RyaW5nJyB9LAkJCS8vIHN0cmluZ3MKCQkJeyByZWdleDogU3ludGF4SGlnaGxpZ2h0ZXIucmVnZXhMaWIuc2luZ2xlUXVvdGVkU3RyaW5nLAkJY3NzOiAnc3RyaW5nJyB9LAkJCS8vIHN0cmluZ3MKCQkJeyByZWdleDogL15ccyojLiovZ20sCQkJCQkJCQkJCWNzczogJ3ByZXByb2Nlc3NvcicgfSwJCS8vIHByZXByb2Nlc3NvciB0YWdzIGxpa2UgI3JlZ2lvbiBhbmQgI2VuZHJlZ2lvbgoJCQl7IHJlZ2V4OiBuZXcgUmVnRXhwKHRoaXMuZ2V0S2V5d29yZHMoa2V5d29yZHMpLCAnZ20nKSwJCWNzczogJ2tleXdvcmQnIH0sCQkJLy8gYyMga2V5d29yZAoJCQl7IHJlZ2V4OiAvXGJwYXJ0aWFsKD89XHMrKD86Y2xhc3N8aW50ZXJmYWNlfHN0cnVjdClcYikvZywJY3NzOiAna2V5d29yZCcgfSwJCQkvLyBjb250ZXh0dWFsIGtleXdvcmQ6ICdwYXJ0aWFsJwoJCQl7IHJlZ2V4OiAvXGJ5aWVsZCg/PVxzKyg/OnJldHVybnxicmVhaylcYikvZywJCQkJY3NzOiAna2V5d29yZCcgfQkJCS8vIGNvbnRleHR1YWwga2V5d29yZDogJ3lpZWxkJwoJCQldOwoJCQoJCXRoaXMuZm9ySHRtbFNjcmlwdChTeW50YXhIaWdobGlnaHRlci5yZWdleExpYi5hc3BTY3JpcHRUYWdzKTsKCX07CgoJQnJ1c2gucHJvdG90eXBlCT0gbmV3IFN5bnRheEhpZ2hsaWdodGVyLkhpZ2hsaWdodGVyKCk7CglCcnVzaC5hbGlhc2VzCT0gWydjIycsICdjLXNoYXJwJywgJ2NzaGFycCddOwoKCVN5bnRheEhpZ2hsaWdodGVyLmJydXNoZXMuQ1NoYXJwID0gQnJ1c2g7CgoJLy8gQ29tbW9uSlMKCXR5cGVvZihleHBvcnRzKSAhPSAndW5kZWZpbmVkJyA/IGV4cG9ydHMuQnJ1c2ggPSBCcnVzaCA6IG51bGw7Cn0pKCk7Cgo="></script><!--
	shBrushXml.js        --><script markdown=0 type="text/javascript" src="data:text/stylesheet;base64,LyoqCiAqIFN5bnRheEhpZ2hsaWdodGVyCiAqIGh0dHA6Ly9hbGV4Z29yYmF0Y2hldi5jb20vU3ludGF4SGlnaGxpZ2h0ZXIKICoKICogU3ludGF4SGlnaGxpZ2h0ZXIgaXMgZG9uYXRpb253YXJlLiBJZiB5b3UgYXJlIHVzaW5nIGl0LCBwbGVhc2UgZG9uYXRlLgogKiBodHRwOi8vYWxleGdvcmJhdGNoZXYuY29tL1N5bnRheEhpZ2hsaWdodGVyL2RvbmF0ZS5odG1sCiAqCiAqIEB2ZXJzaW9uCiAqIDMuMC44MyAoSnVseSAwMiAyMDEwKQogKiAKICogQGNvcHlyaWdodAogKiBDb3B5cmlnaHQgKEMpIDIwMDQtMjAxMCBBbGV4IEdvcmJhdGNoZXYuCiAqCiAqIEBsaWNlbnNlCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLgogKi8KOyhmdW5jdGlvbigpCnsKCS8vIENvbW1vbkpTCgl0eXBlb2YocmVxdWlyZSkgIT0gJ3VuZGVmaW5lZCcgPyBTeW50YXhIaWdobGlnaHRlciA9IHJlcXVpcmUoJ3NoQ29yZScpLlN5bnRheEhpZ2hsaWdodGVyIDogbnVsbDsKCglmdW5jdGlvbiBCcnVzaCgpCgl7CgkJZnVuY3Rpb24gcHJvY2VzcyhtYXRjaCwgcmVnZXhJbmZvKQoJCXsKCQkJdmFyIGNvbnN0cnVjdG9yID0gU3ludGF4SGlnaGxpZ2h0ZXIuTWF0Y2gsCgkJCQljb2RlID0gbWF0Y2hbMF0sCgkJCQl0YWcgPSBuZXcgWFJlZ0V4cCgnKCZsdDt8PClbXFxzXFwvXFw/XSooPzxuYW1lPls6XFx3LVxcLl0rKScsICd4ZycpLmV4ZWMoY29kZSksCgkJCQlyZXN1bHQgPSBbXQoJCQkJOwoJCQoJCQlpZiAobWF0Y2guYXR0cmlidXRlcyAhPSBudWxsKSAKCQkJewoJCQkJdmFyIGF0dHJpYnV0ZXMsCgkJCQkJcmVnZXggPSBuZXcgWFJlZ0V4cCgnKD88bmFtZT4gW1xcdzpcXC1cXC5dKyknICsKCQkJCQkJCQkJCSdcXHMqPVxccyonICsKCQkJCQkJCQkJCScoPzx2YWx1ZT4gIi4qPyJ8XCcuKj9cJ3xcXHcrKScsCgkJCQkJCQkJCQkneGcnKTsKCgkJCQl3aGlsZSAoKGF0dHJpYnV0ZXMgPSByZWdleC5leGVjKGNvZGUpKSAhPSBudWxsKSAKCQkJCXsKCQkJCQlyZXN1bHQucHVzaChuZXcgY29uc3RydWN0b3IoYXR0cmlidXRlcy5uYW1lLCBtYXRjaC5pbmRleCArIGF0dHJpYnV0ZXMuaW5kZXgsICdjb2xvcjEnKSk7CgkJCQkJcmVzdWx0LnB1c2gobmV3IGNvbnN0cnVjdG9yKGF0dHJpYnV0ZXMudmFsdWUsIG1hdGNoLmluZGV4ICsgYXR0cmlidXRlcy5pbmRleCArIGF0dHJpYnV0ZXNbMF0uaW5kZXhPZihhdHRyaWJ1dGVzLnZhbHVlKSwgJ3N0cmluZycpKTsKCQkJCX0KCQkJfQoKCQkJaWYgKHRhZyAhPSBudWxsKQoJCQkJcmVzdWx0LnB1c2goCgkJCQkJbmV3IGNvbnN0cnVjdG9yKHRhZy5uYW1lLCBtYXRjaC5pbmRleCArIHRhZ1swXS5pbmRleE9mKHRhZy5uYW1lKSwgJ2tleXdvcmQnKQoJCQkJKTsKCgkJCXJldHVybiByZXN1bHQ7CgkJfQoJCgkJdGhpcy5yZWdleExpc3QgPSBbCgkJCXsgcmVnZXg6IG5ldyBYUmVnRXhwKCcoXFwmbHQ7fDwpXFwhXFxbW1xcd1xcc10qP1xcWygufFxccykqP1xcXVxcXShcXCZndDt8PiknLCAnZ20nKSwJCQljc3M6ICdjb2xvcjInIH0sCS8vIDwhWyAuLi4gWyAuLi4gXV0+CgkJCXsgcmVnZXg6IFN5bnRheEhpZ2hsaWdodGVyLnJlZ2V4TGliLnhtbENvbW1lbnRzLAkJCQkJCQkJCQkJCWNzczogJ2NvbW1lbnRzJyB9LAkvLyA8IS0tIC4uLiAtLT4KCQkJeyByZWdleDogbmV3IFhSZWdFeHAoJygmbHQ7fDwpW1xcc1xcL1xcP10qKFxcdyspKD88YXR0cmlidXRlcz4uKj8pW1xcc1xcL1xcP10qKCZndDt8PiknLCAnc2cnKSwgZnVuYzogcHJvY2VzcyB9CgkJXTsKCX07CgoJQnJ1c2gucHJvdG90eXBlCT0gbmV3IFN5bnRheEhpZ2hsaWdodGVyLkhpZ2hsaWdodGVyKCk7CglCcnVzaC5hbGlhc2VzCT0gWyd4bWwnLCAneGh0bWwnLCAneHNsdCcsICdodG1sJ107CgoJU3ludGF4SGlnaGxpZ2h0ZXIuYnJ1c2hlcy5YbWwgPSBCcnVzaDsKCgkvLyBDb21tb25KUwoJdHlwZW9mKGV4cG9ydHMpICE9ICd1bmRlZmluZWQnID8gZXhwb3J0cy5CcnVzaCA9IEJydXNoIDogbnVsbDsKfSkoKTsK"></script><!--
	shBrushPowerShell.js --><script markdown=0 type="text/javascript" src="data:text/javascript;base64,LyoqCiAqIFN5bnRheEhpZ2hsaWdodGVyCiAqIGh0dHA6Ly9hbGV4Z29yYmF0Y2hldi5jb20vU3ludGF4SGlnaGxpZ2h0ZXIKICoKICogU3ludGF4SGlnaGxpZ2h0ZXIgaXMgZG9uYXRpb253YXJlLiBJZiB5b3UgYXJlIHVzaW5nIGl0LCBwbGVhc2UgZG9uYXRlLgogKiBodHRwOi8vYWxleGdvcmJhdGNoZXYuY29tL1N5bnRheEhpZ2hsaWdodGVyL2RvbmF0ZS5odG1sCiAqCiAqIEB2ZXJzaW9uCiAqIDMuMC44MyAoSnVseSAwMiAyMDEwKQogKiAKICogQGNvcHlyaWdodAogKiBDb3B5cmlnaHQgKEMpIDIwMDQtMjAxMCBBbGV4IEdvcmJhdGNoZXYuCiAqCiAqIEBsaWNlbnNlCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBhbmQgR1BMIGxpY2Vuc2VzLgogKi8KOyhmdW5jdGlvbigpCnsKCS8vIENvbW1vbkpTCgl0eXBlb2YocmVxdWlyZSkgIT0gJ3VuZGVmaW5lZCcgPyBTeW50YXhIaWdobGlnaHRlciA9IHJlcXVpcmUoJ3NoQ29yZScpLlN5bnRheEhpZ2hsaWdodGVyIDogbnVsbDsKCglmdW5jdGlvbiBCcnVzaCgpCgl7CgkJLy8gQ29udHJpYnV0ZXMgYnkgQi52LlphbnRlbiwgR2V0cm9uaWNzCgkJLy8gaHR0cDovL2NvbmZsdWVuY2UuYXRsYXNzaWFuLmNvbS9kaXNwbGF5L0NPTkZFWFQvTmV3K0NvZGUrTWFjcm8KCgkJdmFyIGtleXdvcmRzID0gJ0FkZC1Db250ZW50IEFkZC1IaXN0b3J5IEFkZC1NZW1iZXIgQWRkLVBTU25hcGluIENsZWFyKC1Db250ZW50KT8gQ2xlYXItSXRlbSAnICsKCQkJCQknQ2xlYXItSXRlbVByb3BlcnR5IENsZWFyLVZhcmlhYmxlIENvbXBhcmUtT2JqZWN0IENvbnZlcnRGcm9tLVNlY3VyZVN0cmluZyBDb252ZXJ0LVBhdGggJyArCgkJCQkJJ0NvbnZlcnRUby1IdG1sIENvbnZlcnRUby1TZWN1cmVTdHJpbmcgQ29weSgtSXRlbSk/IENvcHktSXRlbVByb3BlcnR5IEV4cG9ydC1BbGlhcyAnICsKCQkJCQknRXhwb3J0LUNsaXhtbCBFeHBvcnQtQ29uc29sZSBFeHBvcnQtQ3N2IEZvckVhY2goLU9iamVjdCk/IEZvcm1hdC1DdXN0b20gRm9ybWF0LUxpc3QgJyArCgkJCQkJJ0Zvcm1hdC1UYWJsZSBGb3JtYXQtV2lkZSBHZXQtQWNsIEdldC1BbGlhcyBHZXQtQXV0aGVudGljb2RlU2lnbmF0dXJlIEdldC1DaGlsZEl0ZW0gR2V0LUNvbW1hbmQgJyArCgkJCQkJJ0dldC1Db250ZW50IEdldC1DcmVkZW50aWFsIEdldC1DdWx0dXJlIEdldC1EYXRlIEdldC1FdmVudExvZyBHZXQtRXhlY3V0aW9uUG9saWN5ICcgKwoJCQkJCSdHZXQtSGVscCBHZXQtSGlzdG9yeSBHZXQtSG9zdCBHZXQtSXRlbSBHZXQtSXRlbVByb3BlcnR5IEdldC1Mb2NhdGlvbiBHZXQtTWVtYmVyICcgKwoJCQkJCSdHZXQtUGZ4Q2VydGlmaWNhdGUgR2V0LVByb2Nlc3MgR2V0LVBTRHJpdmUgR2V0LVBTUHJvdmlkZXIgR2V0LVBTU25hcGluIEdldC1TZXJ2aWNlICcgKwoJCQkJCSdHZXQtVHJhY2VTb3VyY2UgR2V0LVVJQ3VsdHVyZSBHZXQtVW5pcXVlIEdldC1WYXJpYWJsZSBHZXQtV21pT2JqZWN0IEdyb3VwLU9iamVjdCAnICsKCQkJCQknSW1wb3J0LUFsaWFzIEltcG9ydC1DbGl4bWwgSW1wb3J0LUNzdiBJbnZva2UtRXhwcmVzc2lvbiBJbnZva2UtSGlzdG9yeSBJbnZva2UtSXRlbSAnICsKCQkJCQknSm9pbi1QYXRoIE1lYXN1cmUtQ29tbWFuZCBNZWFzdXJlLU9iamVjdCBNb3ZlKC1JdGVtKT8gTW92ZS1JdGVtUHJvcGVydHkgTmV3LUFsaWFzICcgKwoJCQkJCSdOZXctSXRlbSBOZXctSXRlbVByb3BlcnR5IE5ldy1PYmplY3QgTmV3LVBTRHJpdmUgTmV3LVNlcnZpY2UgTmV3LVRpbWVTcGFuICcgKwoJCQkJCSdOZXctVmFyaWFibGUgT3V0LURlZmF1bHQgT3V0LUZpbGUgT3V0LUhvc3QgT3V0LU51bGwgT3V0LVByaW50ZXIgT3V0LVN0cmluZyBQb3AtTG9jYXRpb24gJyArCgkJCQkJJ1B1c2gtTG9jYXRpb24gUmVhZC1Ib3N0IFJlbW92ZS1JdGVtIFJlbW92ZS1JdGVtUHJvcGVydHkgUmVtb3ZlLVBTRHJpdmUgUmVtb3ZlLVBTU25hcGluICcgKwoJCQkJCSdSZW1vdmUtVmFyaWFibGUgUmVuYW1lLUl0ZW0gUmVuYW1lLUl0ZW1Qcm9wZXJ0eSBSZXNvbHZlLVBhdGggUmVzdGFydC1TZXJ2aWNlIFJlc3VtZS1TZXJ2aWNlICcgKwoJCQkJCSdTZWxlY3QtT2JqZWN0IFNlbGVjdC1TdHJpbmcgU2V0LUFjbCBTZXQtQWxpYXMgU2V0LUF1dGhlbnRpY29kZVNpZ25hdHVyZSBTZXQtQ29udGVudCAnICsKCQkJCQknU2V0LURhdGUgU2V0LUV4ZWN1dGlvblBvbGljeSBTZXQtSXRlbSBTZXQtSXRlbVByb3BlcnR5IFNldC1Mb2NhdGlvbiBTZXQtUFNEZWJ1ZyAnICsKCQkJCQknU2V0LVNlcnZpY2UgU2V0LVRyYWNlU291cmNlIFNldCgtVmFyaWFibGUpPyBTb3J0LU9iamVjdCBTcGxpdC1QYXRoIFN0YXJ0LVNlcnZpY2UgJyArCgkJCQkJJ1N0YXJ0LVNsZWVwIFN0YXJ0LVRyYW5zY3JpcHQgU3RvcC1Qcm9jZXNzIFN0b3AtU2VydmljZSBTdG9wLVRyYW5zY3JpcHQgU3VzcGVuZC1TZXJ2aWNlICcgKwoJCQkJCSdUZWUtT2JqZWN0IFRlc3QtUGF0aCBUcmFjZS1Db21tYW5kIFVwZGF0ZS1Gb3JtYXREYXRhIFVwZGF0ZS1UeXBlRGF0YSBXaGVyZSgtT2JqZWN0KT8gJyArCgkJCQkJJ1dyaXRlLURlYnVnIFdyaXRlLUVycm9yIFdyaXRlKC1Ib3N0KT8gV3JpdGUtT3V0cHV0IFdyaXRlLVByb2dyZXNzIFdyaXRlLVZlcmJvc2UgV3JpdGUtV2FybmluZyc7CgkJdmFyIGFsaWFzID0gJ2FjIGFzbnAgY2xjIGNsaSBjbHAgY2x2IGNwaSBjcHAgY3ZwYSBkaWZmIGVwYWwgZXBjc3YgZmMgZmwgJyArCgkJCQkJJ2Z0IGZ3IGdhbCBnYyBnY2kgZ2NtIGdkciBnaHkgZ2kgZ2wgZ20gZ3AgZ3BzIGdyb3VwIGdzdiAnICsKCQkJCQknZ3NucCBndSBndiBnd21pIGlleCBpaHkgaWkgaXBhbCBpcGNzdiBtaSBtcCBuYWwgbmRyIG5pIG52IG9oIHJkciAnICsKCQkJCQkncmkgcm5pIHJucCBycCByc25wIHJ2IHJ2cGEgc2FsIHNhc3Ygc2Mgc2VsZWN0IHNpIHNsIHNsZWVwIHNvcnQgc3AgJyArCgkJCQkJJ3NwcHMgc3BzdiBzdiB0ZWUgY2F0IGNkIGNwIGggaGlzdG9yeSBraWxsIGxwIGxzICcgKwoJCQkJCSdtb3VudCBtdiBwb3BkIHBzIHB1c2hkIHB3ZCByIHJtIHJtZGlyIGVjaG8gY2xzIGNoZGlyIGRlbCBkaXIgJyArCgkJCQkJJ2VyYXNlIHJkIHJlbiB0eXBlICUgXFw/JzsKCgkJdGhpcy5yZWdleExpc3QgPSBbCgkJCXsgcmVnZXg6IC8jLiokL2dtLAkJCQkJCQkJCQljc3M6ICdjb21tZW50cycgfSwgIC8vIG9uZSBsaW5lIGNvbW1lbnRzCgkJCXsgcmVnZXg6IC9cJFthLXpBLVowLTldK1xiL2csCQkJCQkJCWNzczogJ3ZhbHVlJyAgIH0sICAgLy8gdmFyaWFibGVzICRDb21wdXRlcjEKCQkJeyByZWdleDogL1wtW2EtekEtWl0rXGIvZywJCQkJCQkJCWNzczogJ2tleXdvcmQnIH0sICAgLy8gT3BlcmF0b3JzICAgIC1ub3QgIC1hbmQgIC1lcQoJCQl7IHJlZ2V4OiBTeW50YXhIaWdobGlnaHRlci5yZWdleExpYi5kb3VibGVRdW90ZWRTdHJpbmcsCWNzczogJ3N0cmluZycgfSwgICAgLy8gc3RyaW5ncwoJCQl7IHJlZ2V4OiBTeW50YXhIaWdobGlnaHRlci5yZWdleExpYi5zaW5nbGVRdW90ZWRTdHJpbmcsCWNzczogJ3N0cmluZycgfSwgICAgLy8gc3RyaW5ncwoJCQl7IHJlZ2V4OiBuZXcgUmVnRXhwKHRoaXMuZ2V0S2V5d29yZHMoa2V5d29yZHMpLCAnZ21pJyksCWNzczogJ2tleXdvcmQnIH0sCgkJCXsgcmVnZXg6IG5ldyBSZWdFeHAodGhpcy5nZXRLZXl3b3JkcyhhbGlhcyksICdnbWknKSwJY3NzOiAna2V5d29yZCcgfQoJCV07Cgl9OwoKCUJydXNoLnByb3RvdHlwZQk9IG5ldyBTeW50YXhIaWdobGlnaHRlci5IaWdobGlnaHRlcigpOwoJQnJ1c2guYWxpYXNlcwk9IFsncG93ZXJzaGVsbCcsICdwcyddOwoKCVN5bnRheEhpZ2hsaWdodGVyLmJydXNoZXMuUG93ZXJTaGVsbCA9IEJydXNoOwoKCS8vIENvbW1vbkpTCgl0eXBlb2YoZXhwb3J0cykgIT0gJ3VuZGVmaW5lZCcgPyBleHBvcnRzLkJydXNoID0gQnJ1c2ggOiBudWxsOwp9KSgpOwo="></script><!--
	cs  <script type="text/javascript" src=""></script>
	--><script
	type="text/javascript">SyntaxHighlighter.all();
</script>
